{"version":3,"sources":["config/save.js","config/data.js","config/vanilla.js","config/legacy-1.js","config/legacy-2.js","tab/infection/index.js","config/init.js","app.js","index.js","state.js"],"names":["SaveConfig","id","config","useAppState","setState","Form","Group","controlId","Button","variant","type","onClick","game","size","games","name","className","engine","undefined","cities","color","count","createStartingDeck","startingDeck","discard","unseen","epidemics","removed","forEach","city","i","removeFromDeck","sections","section","find","Object","keys","includes","addCard","Infections","deck","setDeck","infect","removeFromTopOfDeck","epidemic","reverse","removeFromBottomOfDeck","push","Container","fluid","map","cards","key","DeckSection","entries","length","Card","total","Initialize","useState","selectedGame","setSelectedGame","GameConfig","Label","Control","as","value","onChange","e","target","App","navigation","setNavigation","Nav","activeKey","onSelect","k","Item","Link","eventKey","inline","window","history","back","ReactDOM","render","document","getElementById","readBrowserHash","hash","location","JSON","parse","Buffer","from","toString","context","createContext","AppStateProvider","children","state","console","log","Provider","defaultValueFn","useContext","updateHash","obj","stringify","writeBrowserHash","useEffect","listener","addEventListener","removeEventListener","actualState","updateState","newSubState","newState"],"mappings":"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","file":"static/js/main.171cc6db.chunk.js","sourcesContent":["import React from 'react';\nimport { useAppState } from '../state';\nimport { Button, Form } from 'react-bootstrap';\nimport { CheckCircle } from 'react-bootstrap-icons';\n\nexport const SaveConfig = ({id, config}) => {\n    const [, setState] = useAppState();\n    const save = () => setState({\n        game: id,\n        config: config,\n    });\n\n    return (\n        <Form.Group controlId='init.save-config'>\n            <Button variant=\"success\" type=\"submit\" onClick={save}>\n                <CheckCircle size={24} /> Start\n            </Button>\n        </Form.Group>\n    );\n};\n","import { VanillaConfig } from './vanilla';\nimport { Legacy1Game } from './legacy-1';\nimport { Legacy2Config } from './legacy-2';\n\nexport const games = [\n    {\n        name: 'Vanilla',\n        config: VanillaConfig,\n        engine: undefined,\n    },\n    Legacy1Game,\n    {\n        name: 'Legacy Season 2',\n        config: Legacy2Config,\n        engine: undefined,\n    }\n];\n","import React from 'react';\nimport { SaveConfig } from './save';\nimport { Form } from 'react-bootstrap';\n\nexport const VanillaConfig = ({id}) => (\n    <>\n        <Form.Group controlId='init.game-config'>\n            <span className='text-muted'>No configuration options.</span>\n        </Form.Group>\n        <SaveConfig id={id} config={{}} />\n    </>\n);\n","import React from 'react';\nimport { SaveConfig } from './save';\nimport { Form } from 'react-bootstrap';\n\nconst epidemics = 5;\nconst cities = [\n    { name: 'Algiers', color: 'black', count: 1, },\n    { name: 'Atlanta', color: 'blue', count: 1, },\n    { name: 'Baghdad', color: 'black', count: 1, },\n    { name: 'Bangkok', color: 'red', count: 1, },\n    { name: 'Beijing', color: 'red', count: 1, },\n    { name: 'Bogotá', color: 'yellow', count: 1, },\n    { name: 'Buenos Aires', color: 'yellow', count: 1, },\n    { name: 'Cairo', color: 'black', count: 1, },\n    { name: 'Chennai', color: 'black', count: 1, },\n    { name: 'Chicago', color: 'blue', count: 1, },\n    { name: 'Delhi', color: 'black', count: 1, },\n    { name: 'Essen', color: 'blue', count: 1, },\n    { name: 'Ho Chi Minh City', color: 'red', count: 1, },\n    { name: 'Hong Kong', color: 'red', count: 1, },\n    { name: 'Istanbul', color: 'black', count: 1, },\n    { name: 'Jakarta', color: 'red', count: 1, },\n    { name: 'Johannesburg', color: 'yellow', count: 1, },\n    { name: 'Karachi', color: 'black', count: 1, },\n    { name: 'Khartoum', color: 'yellow', count: 1, },\n    { name: 'Kinshasa', color: 'yellow', count: 1, },\n    { name: 'Kolkata', color: 'black', count: 1, },\n    { name: 'Lagos', color: 'yellow', count: 1, },\n    { name: 'Lima', color: 'yellow', count: 1, },\n    { name: 'London', color: 'blue', count: 1, },\n    { name: 'Los Angeles', color: 'yellow', count: 1, },\n    { name: 'Madrid', color: 'blue', count: 1, },\n    { name: 'Manila', color: 'red', count: 1, },\n    { name: 'Mexico City', color: 'yellow', count: 1, },\n    { name: 'Miami', color: 'yellow', count: 1, },\n    { name: 'Milan', color: 'blue', count: 1, },\n    { name: 'Montréal', color: 'blue', count: 1, },\n    { name: 'Moscow', color: 'black', count: 1, },\n    { name: 'Mumbai', color: 'black', count: 1, },\n    { name: 'New York', color: 'blue', count: 1, },\n    { name: 'Osaka', color: 'red', count: 1, },\n    { name: 'Paris', color: 'blue', count: 1, },\n    { name: 'Riyadh', color: 'black', count: 1, },\n    { name: 'San Francisco', color: 'blue', count: 1, },\n    { name: 'Santiago', color: 'yellow', count: 1, },\n    { name: 'São Paulo', color: 'yellow', count: 1, },\n    { name: 'Seoul', color: 'red', count: 1, },\n    { name: 'Shanghai', color: 'red', count: 1, },\n    { name: 'St. Petersburg', color: 'blue', count: 1, },\n    { name: 'Sydney', color: 'red', count: 1, },\n    { name: 'Taipei', color: 'red', count: 1, },\n    { name: 'Tehran', color: 'black', count: 1, },\n    { name: 'Tokyo', color: 'red', count: 1, },\n    { name: 'Washington', color: 'blue', count: 1, },\n];\n\nconst initialState = {\n\n};\n\nconst config = ({id}) => (\n    <>\n        <Form.Group controlId='init.game-config'>\n            <span className='text-muted'>No configuration options.</span>\n        </Form.Group>\n        <SaveConfig id={id} config={{}} />\n    </>\n);\n\nexport const Legacy1Game = {\n    name: 'Legacy Season 1',\n    config,\n    cities\n};\n","import React from 'react';\nimport { SaveConfig } from './save';\nimport { Form } from 'react-bootstrap';\n\nexport const Legacy2Config = ({id}) => (\n    <>\n        <Form.Group controlId='init.game-config'>\n            <span className='text-muted'>No configuration options.</span>\n        </Form.Group>\n        <SaveConfig id={id} config={{}} />\n    </>\n);\n","import React from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport { useAppState } from '../../state';\nimport { AlertTriangle, CapslockFill } from 'react-bootstrap-icons';\nimport './index.css';\nimport { games } from '../../config/data';\n\nconst createStartingDeck = (cities) => {\n    const startingDeck = {\n        discard: {},\n        unseen: {},\n        epidemics: [],\n        removed: {},\n    };\n\n    cities.forEach((city, id) => {\n        for(let i = 0; i < city.count; i++) {\n            startingDeck.unseen[id] = city.count;\n        }\n    });\n\n    return startingDeck;\n};\n\nconst removeFromDeck = (id, ...sections) => {\n    const section = sections.find(section => Object.keys(section).includes(id));\n    section[id]--;\n    if(section[id] <= 0) {\n        delete section[id];\n    }\n};\n\nconst removeFromTopOfDeck = (id, deck) => removeFromDeck(id, ...deck.epidemics, deck.unseen);\nconst removeFromBottomOfDeck = (id, deck) => removeFromDeck(id, ...([...deck.epidemics, deck.unseen].reverse()));\nconst addCard = (id, section) => {\n    if(!section[id]) {\n        section[id] = 0;\n    }\n\n    section[id]++\n};\n\nexport const Infections = () => {\n    const [game] = useAppState('game');\n    const cities = games[game].cities;\n    const [deck, setDeck] = useAppState('infectionDeck', () => createStartingDeck(cities));\n\n    if(!deck) {\n        setDeck(createStartingDeck(cities));\n        return (<></>);\n    }\n\n    const infect = (id) => {\n        removeFromTopOfDeck(id, deck);\n        addCard(id, deck.discard);\n        setDeck(deck);\n    };\n\n    const epidemic = (id) => {\n        removeFromBottomOfDeck(id, deck);\n        addCard(id, deck.discard);\n        deck.epidemics.push(deck.discard);\n        deck.discard = [];\n        setDeck(deck);\n    };\n\n    const remove = (id, section) => {\n        removeFromDeck(id, section);\n        addCard(id, deck.removed);\n        setDeck(deck);\n    };\n\n    return (\n        <Container fluid className='main-content'>\n            {\n                deck.epidemics.map((cards, i) => (\n                    <DeckSection key={i} name={`Epidemic #${i + 1}`} cities={cities} cards={cards} infect={infect} epidemic={epidemic} />\n                ))\n            }\n            <DeckSection name='Deck' cities={cities} cards={deck.unseen} infect={infect} epidemic={epidemic} />\n            <DeckSection name='Discard' cities={cities} cards={deck.discard} />\n            <DeckSection name='Removed from Play' cities={cities} cards={deck.removed} />\n        </Container>\n    );\n};\n\nconst DeckSection = ({ name, cities, cards, infect, epidemic }) => {\n    if(!cards || Object.entries(cards).length <= 0) {\n        return (<></>);\n    }\n\n    return (\n        <div className='infection-deck-section'>\n            <h4>{name}</h4>\n            <hr />\n            {Object.entries(cards).map(([id, count]) => (\n                <Card\n                    key={id}\n                    id={id}\n                    city={cities[id]}\n                    count={count}\n                    infect={infect}\n                    epidemic={epidemic}\n                />\n            ))}\n        </div>\n    )\n};\n\nconst Card = ({ id, city, count, infect, epidemic }) => {\n    const { color, name, count: total } = city;\n\n    return (\n        <div className={`d-flex infection-deck-card infection-group-${color}`}>\n            <span className='mr-auto p-2'>{name}</span>\n            <span className='p-2'>[{count}/{total}]</span>\n            { epidemic && <span className='p-2'><Button variant='success' size='xs' onClick={() => epidemic(id)}><AlertTriangle size={18} /></Button></span> }\n            { infect && <span className='p-2'><Button size='xs' onClick={() => infect(id)}><CapslockFill size={18} /></Button></span> }\n        </div>\n    );\n};\n\n","import React, { useState } from 'react';\nimport { Container, Form } from 'react-bootstrap';\nimport { games } from './data';\n\nexport const Initialize = () => {\n    const [selectedGame, setSelectedGame] = useState(0);\n    const GameConfig = games[selectedGame].config;\n\n    return (\n        <Container fluid className='main-content'>\n            <h3>Start a New Game</h3>\n            <Form>\n                <Form.Group controlId='init.game-name'>\n                    <Form.Label>Game Version</Form.Label>\n                    <Form.Control as='select' value={selectedGame} onChange={(e) => setSelectedGame(e.target.value)}>\n                        {\n                            games.map((game, i) => (<option key={i} value={i}>{game.name}</option>))\n                        }\n                    </Form.Control>\n                </Form.Group>\n                <GameConfig id={selectedGame} />\n            </Form>\n        </Container>\n    );\n};\n","import React, { useState } from 'react';\nimport { Infections } from './tab/infection';\nimport { Button, Form, Nav } from 'react-bootstrap';\nimport { useAppState } from './state';\nimport './app.css';\nimport { Initialize } from './config/init';\nimport { Trash, SkipBackward } from 'react-bootstrap-icons';\n\n\nexport const App = () => {\n    const [navigation, setNavigation] = useState('/infection');\n    const [game] = useAppState('game');\n    const [, setState] = useAppState();\n\n    if(!game && game !== 0) {\n        return (<Initialize />)\n    }\n\n    return (\n        <>\n            <Nav variant=\"tabs\" activeKey={navigation} onSelect={k => setNavigation(k)}>\n                <Nav.Item>\n                    <Nav.Link eventKey='/infection'>Infection</Nav.Link>\n                </Nav.Item>\n                <Nav.Item className='mr-auto'>\n                    <Nav.Link eventKey='/player-cards'>Player Cards</Nav.Link>\n                </Nav.Item>\n                <Form inline className='nav-buttons'>\n                    <Button variant=\"outline-primary\" onClick={() => window.history.back()}><SkipBackward size={24} /></Button>\n                    <Button variant=\"outline-danger\" onClick={() => setState({})}><Trash size={24} /></Button>\n                </Form>\n            </Nav>\n            {navigation === '/infection' && <Infections />}\n            {navigation === '/player-cards' && <div>todo</div>}\n        </>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { App } from './app';\nimport { AppStateProvider } from './state';\n\nconst Main = () => (\n    <AppStateProvider>\n        <App />\n    </AppStateProvider>\n);\n\nReactDOM.render(<Main />, document.getElementById('root'));\n","import React, { useEffect, createContext, useContext, useState } from 'react';\n\nconst readBrowserHash = () => {\n    const hash = window.location.hash;\n    if(!hash) {\n        return {}\n    }\n\n    return JSON.parse(Buffer.from(hash, 'base64').toString());\n};\nconst writeBrowserHash = (obj) => window.location.hash = Buffer.from(JSON.stringify(obj)).toString(\"base64\");\n\nconst context = createContext(undefined);\n\nexport const AppStateProvider = ({children}) => {\n    const [state, setState] = useState(readBrowserHash());\n    console.log(state);\n    const { Provider } = context;\n    return (\n        <Provider value={[state, setState]}>{children}</Provider>\n    );\n};\n\nexport const useAppState = (key, defaultValueFn) => {\n    const [state, setState] = useContext(context);\n    const updateHash = (obj) => {\n        writeBrowserHash(obj);\n    };\n\n    useEffect(() => {\n        const listener = () => setState(readBrowserHash());\n\n        window.addEventListener('hashchange', listener);\n        return () => window.removeEventListener('hashchange', listener);\n    });\n\n    const actualState = !key ? state : state[key];\n    const updateState = !key ? (newState) => updateHash(newState) : (newSubState) => {\n        const newState = {\n            ...state,\n            [key]: newSubState\n        };\n        updateHash(newState)\n    };\n\n    return [actualState === undefined && defaultValueFn ? defaultValueFn() : actualState, updateState]\n};\n"],"sourceRoot":""}